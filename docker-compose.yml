version: '3.8'

services:
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka

  dynamodb:
    image: amazon/dynamodb-local:latest
    ports:
      - "8000:8000"
    command: -jar DynamoDBLocal.jar -sharedDb -inMemory
    volumes:
      - dynamodb_data:/home/dynamodblocal/data
    environment:
      - AWS_ACCESS_KEY_ID=fake
      - AWS_SECRET_ACCESS_KEY=fake
      - AWS_REGION=us-east-1

  postgres:
    image: bitnami/postgresql:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=payments

  payment-api:
    build:
      context: ./payment-api
    env_file:
      - ./payment-api/config.sh
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka
      - dynamodb
      - localstack

  payment-worker:
    build:
      context: ./payment-worker
    env_file:
      - ./payment-worker/config.sh
    depends_on:
      - kafka
      - dynamodb
      - localstack

  localstack:
    image: localstack/localstack:3.4
    environment:
      - SERVICES=dynamodb,s3,iam,sts,cloudformation,ec2,iam,lambda,logs,apigateway,ecr,kms,ssm,cloudwatch,events,resource-groups,route53,sqs,sns,es,firehose,redshift,stepfunctions,secretsmanager
      - DEFAULT_REGION=us-east-1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEBUG=1
    ports:
      - "4566:4566"
      - "4571:4571"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
      interval: 10s
      timeout: 10s
      retries: 10
volumes:
  kafka_data:
  dynamodb_data:
